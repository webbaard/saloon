# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Webbaard\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Webbaard\Saloon\Application\Controller\:
        resource: '../src/Saloon/Application/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Webbaard\Saloon\Domain\Tab\CommandHandler\OpenTabHandler:
        arguments: ['@tab_collection']
        public: true
        tags:
            - { name: 'prooph_service_bus.tab_command_bus.route_target', message_detection: true }

    saloon.tab_projection.tab_finder:
        class: Webbaard\Saloon\Infra\Tab\Projection\Tab\TabFinder
        arguments: ['@doctrine.dbal.default_connection']

    Webbaard\Saloon\Infra\Tab\Projection\Tab\TabProjection: ~
    Webbaard\Saloon\Infra\Tab\Projection\Tab\TabReadmodel:
        arguments: ['@doctrine.dbal.default_connection']

